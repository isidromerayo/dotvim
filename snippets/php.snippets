#These snippets override anything in the default tex snippets.
snippet orml
	/**
	 * @ORM\Column(type="${1:string}", length="${2}")
	 */
	protected $${3};
snippet orms
	/**
	 * @ORM\Column(type="${1:string}")
	 */
snippet orm
	/**
	 * @ORM\Column(type="${1:string}")
	 */
	protected $${2};
snippet m2m
	/**
	 * @ORM\ManyToMany(targetEntity="${1}", inversedBy="${2}")
	 * @ORM\JoinTable(name="${3}",
	 *      joinColumns={@ORM\JoinColumn(name="${4}_id", referencedColumnName="id")},
	 *      inverseJoinColumns={@ORM\JoinColumn(name="${5}_id", referencedColumnName="id")}
	 * )
	 */
snippet m2ms
	/**
	 * @ORM\ManyToMany(targetEntity="${1}", mappedBy="${2}")
	 */
snippet m21
	/**
	 * @ORM\ManyToOne(targetEntity="${1}", inversedBy="${2}", cascade={"remove"})
	 * @ORM\JoinColumn(name="${3}_id", referencedColumnName="id")
	 */
snippet 12m
	/**
	 * @ORM\OneToMany(targetEntity="${1}", mappedBy="${2}")
	 */
snippet prot
	protected $${1};
snippet ormt
	/**
	* @ORM\Table(name="${1}")
	* @ORM\Entity
	*/
snippet anb
	@Assert\NotBlank()
snippet amin
	@Assert\MinLength(${1})
snippet amax
	@Assert\MaxLength(${1})
snippet atype
	@Assert\Type("${1:integer}")
snippet dni
	protected function letra_nif($dni)
	{
	    return substr("TRWAGMYFPDXBNJZSQVHLCKE", strtr($dni, "XYZ", "012")%23, 1);
	}
snippet javie
	'javierEguiluz' => array(
		'nombre' => 'Javier',
		'apellidos' => 'Eguiluz',
		'biografia' => 'Javier es el fundador de symfony.es, el sitio web más influyente de la comunidad hispana de Symfony. Programador apasionado por Symfony desde sus primeras versiones, actualmente se dedica a la formación.',
		'telefono'  => '600XXXXXX',
		'url'       => 'http://javiereguiluz.com',
		'email'     => 'javier@xxx.xx',
		'linkedin'  => 'http://www.linkedin.com/in/javiereguiluz',
		'twitter'   => 'http://www.twitter.com/javiereguiluz'
	),
snippet marcos
	'marcosLabad' => array(
		'nombre' => 'Marcos',
		'apellidos' => 'Labad',
		'biografia' => 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',
		'telefono' => '600XXXXXX',
		'url' => 'http://www.quevidaesta.com',
		'email' => 'marcos@xxx.xx',
		'linkedin' => 'http://www.linkedin.com/in/marcoslabad',
		'twitter' => 'http://twitter.com/esmiz'
	)
snippet ch1
	$ponencia = new Ponencia();
	$ponencia->setTitulo('Instalación y puesta a punto');
	$ponencia->setDescripcion('Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.');
	$ponencia->setFecha(new \DateTime('2011-07-01'));
	$ponencia->setHora(new \DateTime('9:45:00'));
	$ponencia->setDuracion(45);
	$ponencia->setIdioma('es');
	$ponencia->setPonente(
	    $manager->merge($this->getReference('javierEguiluz'))
	);
	
	$manager->persist($ponencia);
snippet ch2
	$ponencia = new Ponencia();
	$ponencia->setTitulo('La vista. Twig');
	$ponencia->setDescripcion('Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.');
	$ponencia->setFecha(new \DateTime('2011-07-01'));
	$ponencia->setHora(new \DateTime('12:00:00'));
	$ponencia->setDuracion(60);
	$ponencia->setIdioma('es');
	$ponencia->setPonente(
	    $manager->merge($this->getReference('marcosLabad'))
	);
	
	$manager->persist($ponencia);
